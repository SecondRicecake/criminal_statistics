#find matching countries
hc_country_lst<-uniqe(hc$X.U.FEFF.COUNTRY)
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
hc_country_lst
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
le_country_lst
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
hc_country_lst==le_country_lst
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
for (i in nrow(hc_country_lst)){
le_country_lst==hc_country_lst[,i]
}
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
for (i in nrow(hc_country_lst)){
print(le_country_lst==hc_country_lst[,i])
}
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
nrow(hc_country_lst)
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
ncol(hc_country_lst)
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
for (i in length(hc_country_lst)){
print(le_country_lst==hc_country_lst[,i])
}
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
for (i in length(hc_country_lst)){
print(le_country_lst==hc_country_lst[i])
}
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
for (i in length(hc_country_lst)){
print(le_country_lst==hc_country_lst[i,])
}
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
hc_country_lst %in% le_country_lst
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
ob_country_lst<-unique(ob$ISO)
hc_country_lst %in% (le_country_lst & ob_country_lst)
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
ob_country_lst<-unique(ob$ISO)
hc_country_lst %in% le_country_lst %in% ob_country_lst
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
ob_country_lst<-unique(ob$ISO)
hc_country_lst %in% le_country_lst
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
ob_country_lst<-unique(ob$ISO)
subset(hc_country_lst, hc_country_lst %in% le_country_lst)
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
ob_country_lst<-unique(ob$ISO)
tmp <-subset(hc_country_lst, hc_country_lst %in% le_country_lst)
countries<-subset(tmp, tmp %in% ob_country_lst)
countries
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
ob_country_lst<-unique(ob$ISO)
tmp <-subset(hc_country_lst, hc_country_lst %in% le_country_lst)
countries<-subset(tmp, tmp %in% ob_country_lst)
countries
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
create_scattermatrix("LTU")
#READ MY CSVs
hc<-data.frame(read.csv("./dataset/HealthCare.csv",header=TRUE,encoding="UTF-8", stringsAsFactors=FALSE))
le<-data.frame(read.csv("./dataset/LifeExpectancy.csv",header=TRUE,encoding="UTF-8", skip=2,stringsAsFactors=FALSE))
ob<-data.frame(read.csv("./dataset/Obesity.csv",encoding="UTF-8", header=TRUE,stringsAsFactors=FALSE))
#find matching countries
hc_country_lst<-unique(hc$X.U.FEFF.COUNTRY)
#hc_country_lst
le_country_lst <-unique(le$Country.Code)
#le_country_lst
ob_country_lst<-unique(ob$ISO)
tmp <-subset(hc_country_lst, hc_country_lst %in% le_country_lst)
countries<-subset(tmp, tmp %in% ob_country_lst)
countries
#scattermatrix function
create_scattermatrix<-function(countryabbr){
hc_subset<-hc[hc$X.U.FEFF.COUNTRY==countryabbr&hc$SUBJECT=="TOT"&hc$MEASURE=="PC_GDP",]
le_subset<-le[le$Country.Code==countryabbr,]
ob_subset<-ob[ob$ISO==countryabbr&ob$Sex=="Women",] #Women/Men
Years<-hc_subset$TIME[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
Healthcare<-hc_subset$Value[6:(length(hc_subset$TIME)-2)] #cut years from 1975 to 2016
le_1975_2016<-data.frame(t(le_subset[23:length(le_subset)-3])) #cut years from 1975 to 2016
colnames(le_1975_2016)<-"LifeExpectancy" #change colname
#print(length(le_1975_2016)) <-this dataset only has 1 column!!!! the years are column names; No need for dataset$colname !!!
mydataset<-data.frame(Healthcare=Healthcare,LifeExpectancy=le_1975_2016,BMI=ob_subset$Mean.BMI) #bind data frames. Years, Healthcare, LifeExpectancy, BMI
#print(mydataset)
#print(dim(mydataset))
pairs(~Healthcare+LifeExpectancy+BMI,data=mydataset,main=paste("Scatterplot Matrix for", countryabbr))
}
create_scattermatrix("USA")
create_scattermatrix("KOR")
create_scattermatrix("AUS")
raw_adhd<-read.csv(file="adhd200.csv")
df_adhd<-data.frame(raw_adhd)
an_children<-df_adhd[df_adhd$DX != "pending",] #disregard pending diagnosis
colname(an_children)
raw_adhd<-read.csv(file="adhd200.csv")
df_adhd<-data.frame(raw_adhd)
an_children<-df_adhd[df_adhd$DX != "pending",] #disregard pending diagnosis
colnames(an_children)
raw_adhd<-read.csv(file="adhd200.csv")
df_adhd<-data.frame(raw_adhd)
children<-df_adhd[df_adhd$DX != "pending",] #disregard pending diagnosis
colnames(children)
hyper_impulsive <- children$DX[children$DX==2]
inattentive <- children$DX[children$DX==3]
t.test(hyper_impulsive,inattentive)
hyper_impulsive <- children$DX[children$DX==2]
inattentive <- children$DX[children$DX==3]
t.test(hyper_impulsive$age,inattentive$age)
hyper_impulsive <- children$DX[children$DX==2]
inattentive <- children$DX[children$DX==3]
hyper_impulsive
hyper_impulsive <- children[children$DX==2]
hyper_impulsive <- children[children$DX==2,]
inattentive <- children[children$DX==3,]
hyper_impulsive
hyper_impulsive <- children[children$DX==2,]
inattentive <- children[children$DX==3,]
hyper_impulsive
inattentive
hyper_impulsive <- children[(children$DX==1 | children$DX==2),]
inattentive <- children[children$DX==3,]
hyper_impulsive
inattentive
hyper_impulsive <- children[(children$DX==1 | children$DX==2),]
inattentive <- children[children$DX==3,]
#hyper_impulsive
#inattentive
t.test(hyper_impulsive$Age, inattentive$Age)
hyper_impulsive <- children[(children$DX==1 | children$DX==2),]
inattentive <- children[children$DX==3,]
#hyper_impulsive
#inattentive
res <- t.test(hyper_impulsive$Age, inattentive$Age)
res$p.value < 0.05
hyper_impulsive <- children[(children$DX==1 | children$DX==2),]
inattentive <- children[children$DX==3,]
#hyper_impulsive
#inattentive
res <- t.test(hyper_impulsive$Age, inattentive$Age)
res$p.value < 0.05
res2 <- t.test(hyper_impulsive$Gender, inattentive$Gender)
res2
res2 <- t.test(hyper_impulsive$Gender, inattentive$Gender)
res2$p.value
